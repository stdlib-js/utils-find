{"version":3,"file":"index.mjs","sources":["../lib/find.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport { isPrimitive as isInteger } from '@stdlib/assert-is-integer';\nimport isObject from '@stdlib/assert-is-plain-object';\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport isCollection from '@stdlib/assert-is-collection';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport indexOf from '@stdlib/utils-index-of';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// VARIABLES //\n\nvar RETURNS = [ 'values', 'indices', '*' ];\n\n\n// MAIN //\n\n/**\n* Finds elements in an array-like object that satisfy a test condition.\n*\n* @param {(Collection|string)} arr - object from which elements will be tested\n* @param {Options} [options] - function options\n* @param {integer} [options.k=arr.length] - limits the number of returned elements\n* @param {string} [options.returns='indices'] - if `values`, values are returned; if `indices`, indices are returned; if `*`, both indices and values are returned\n* @param {Function} clbk - function invoked for each array element. If the return value is truthy, the value is considered to have satisfied the test condition.\n* @throws {TypeError} first argument must be an array-like object\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} last argument must be a function\n* @throws {TypeError} `options.k` must be an integer\n* @throws {TypeError} `options.returns` must be a string equal to `values`, `indices` or `*`\n* @returns {Array} array of indices, element values, or arrays of index-value pairs\n*\n* @example\n* var data = [ 30, 20, 50, 60, 10 ];\n* var vals = find( data, condition );\n* // returns [ 0, 2, 3 ]\n*\n* function condition( val ) {\n*     return val > 20;\n* }\n*\n* @example\n* var data = [ 30, 20, 50, 60, 10 ];\n* var opts = {\n*     'k': 2,\n*     'returns': 'values'\n* };\n* var vals = find( data, opts, condition );\n* // returns [ 30, 50 ]\n*\n* function condition( val ) {\n*     return val > 20;\n* }\n*\n* @example\n* var data = [ 30, 20, 50, 60, 10 ];\n* var vals = find( data, condition );\n* // returns []\n*\n* function condition( val ) {\n*     return val > 1000;\n* }\n*\n* @example\n* var data = [ 30, 20, 50, 60, 10 ];\n* var opts = {\n*     'k': -2,\n*     'returns': 'values'\n* };\n* var vals = find( data, opts, condition );\n* // returns [ 60, 50 ]\n*\n* function condition( val ) {\n*     return val > 20;\n* }\n*\n* @example\n* var data = [ 30, 20, 50, 60, 10 ];\n* var opts = {\n*     'k': -2,\n*     'returns': '*'\n* };\n* var vals = find( data, opts, condition );\n* // returns [ [3, 60], [2, 50] ]\n*\n* function condition( val ) {\n*     return val > 20;\n* }\n*/\nfunction find( arr, options, clbk ) { // eslint-disable-line stdlib/no-redeclare\n\tvar count;\n\tvar mode;\n\tvar opts;\n\tvar len;\n\tvar out;\n\tvar ret;\n\tvar cb;\n\tvar i;\n\tvar k;\n\tvar v;\n\n\tmode = 0;\n\n\tif ( !isCollection( arr ) && !isString( arr ) ) {\n\t\tthrow new TypeError( format( '1Tp2u,F5', arr ) );\n\t}\n\tlen = arr.length;\n\tif ( arguments.length < 3 ) {\n\t\topts = {};\n\t\tcb = options;\n\t} else {\n\t\topts = options;\n\t\tcb = clbk;\n\t}\n\tif ( !isFunction( cb ) ) {\n\t\tthrow new TypeError( format( '1Tp2b,GJ', cb ) );\n\t}\n\tif ( !isObject( opts ) ) {\n\t\tthrow new TypeError( format( '1Tp2V,FD', opts ) );\n\t}\n\tif ( hasOwnProp( opts, 'k' ) ) {\n\t\tk = opts.k;\n\t\tif ( !isInteger( k ) ) {\n\t\t\tthrow new TypeError( format( '1Tp8M,JG', 'k', k ) );\n\t\t}\n\t} else {\n\t\tk = len;\n\t}\n\tif ( hasOwnProp( opts, 'returns' ) ) {\n\t\tret = opts.returns;\n\t\tif ( !isString( ret ) || indexOf( RETURNS, ret ) === -1 ) {\n\t\t\tthrow new TypeError( format( '1Tp2X,3g,4S,GD,Gg,Jm', 'returns', RETURNS.join( '\", \"' ), ret ) );\n\t\t}\n\t\tif ( ret === 'values' ) {\n\t\t\tmode = 1;\n\t\t} else if ( ret === '*' ) {\n\t\t\tmode = 2;\n\t\t}\n\t}\n\tout = [];\n\tcount = 0;\n\n\tif ( k === 0 ) {\n\t\treturn out;\n\t}\n\tif ( k > 0 ) {\n\t\t// Search moving from begin-to-end [0,1,...]:\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tv = arr[ i ];\n\t\t\tif ( cb( v, i, arr ) ) { // eslint-disable-line node/callback-return\n\t\t\t\tif ( mode === 2 ) {\n\t\t\t\t\tout.push( [ i, v ] );\n\t\t\t\t} else if ( mode === 1 ) {\n\t\t\t\t\tout.push( v );\n\t\t\t\t} else {\n\t\t\t\t\tout.push( i );\n\t\t\t\t}\n\t\t\t\tcount += 1;\n\t\t\t\tif ( count === k ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\t// Search moving from end-to-begin [...,2,1,0]:\n\tk = -k;\n\tfor ( i = len-1; i >= 0; i-- ) {\n\t\tv = arr[ i ];\n\t\tif ( cb( v, i, arr ) ) { // eslint-disable-line node/callback-return\n\t\t\tif ( mode === 2 ) {\n\t\t\t\tout.push( [ i, v ] );\n\t\t\t} else if ( mode === 1 ) {\n\t\t\t\tout.push( v );\n\t\t\t} else {\n\t\t\t\tout.push( i );\n\t\t\t}\n\t\t\tcount += 1;\n\t\t\tif ( count === k ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default find;\n"],"names":["RETURNS","find","arr","options","clbk","count","mode","opts","len","out","ret","cb","i","k","v","isCollection","isString","TypeError","format","length","arguments","isFunction","isObject","hasOwnProp","isInteger","returns","indexOf","join","push"],"mappings":";;6tBAkCA,IAAIA,EAAU,CAAE,SAAU,UAAW,KA6ErC,SAASC,EAAMC,EAAKC,EAASC,GAC5B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIJ,GAFAR,EAAO,GAEDS,EAAcb,KAAUc,EAAUd,GACvC,MAAM,IAAIe,UAAWC,EAAQ,WAAYhB,IAU1C,GARAM,EAAMN,EAAIiB,OACLC,UAAUD,OAAS,GACvBZ,EAAO,CAAA,EACPI,EAAKR,IAELI,EAAOJ,EACPQ,EAAKP,IAEAiB,EAAYV,GACjB,MAAM,IAAIM,UAAWC,EAAQ,WAAYP,IAE1C,IAAMW,EAAUf,GACf,MAAM,IAAIU,UAAWC,EAAQ,WAAYX,IAE1C,GAAKgB,EAAYhB,EAAM,MAEtB,GADAM,EAAIN,EAAKM,GACHW,EAAWX,GAChB,MAAM,IAAII,UAAWC,EAAQ,WAAY,IAAKL,SAG/CA,EAAIL,EAEL,GAAKe,EAAYhB,EAAM,WAAc,CAEpC,GADAG,EAAMH,EAAKkB,SACLT,EAAUN,KAAsC,IAA7BgB,EAAS1B,EAASU,GAC1C,MAAM,IAAIO,UAAWC,EAAQ,uBAAwB,UAAWlB,EAAQ2B,KAAM,QAAUjB,IAE5E,WAARA,EACJJ,EAAO,EACY,MAARI,IACXJ,EAAO,EAER,CAID,GAHAG,EAAM,GACNJ,EAAQ,EAEG,IAANQ,EACJ,OAAOJ,EAER,GAAKI,EAAI,EAAI,CAEZ,IAAMD,EAAI,EAAGA,EAAIJ,KAEXG,EADLG,EAAIZ,EAAKU,GACGA,EAAGV,KACA,IAATI,EACJG,EAAImB,KAAM,CAAEhB,EAAGE,IACK,IAATR,EACXG,EAAImB,KAAMd,GAEVL,EAAImB,KAAMhB,IAEXP,GAAS,KACMQ,IAXKD,KAgBtB,OAAOH,CACP,CAGD,IADAI,GAAKA,EACCD,EAAIJ,EAAI,EAAGI,GAAK,KAEhBD,EADLG,EAAIZ,EAAKU,GACGA,EAAGV,KACA,IAATI,EACJG,EAAImB,KAAM,CAAEhB,EAAGE,IACK,IAATR,EACXG,EAAImB,KAAMd,GAEVL,EAAImB,KAAMhB,IAEXP,GAAS,KACMQ,IAXQD,KAgBzB,OAAOH,CACR"}